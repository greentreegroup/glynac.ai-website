{
  "version": 3,
  "sources": ["../../tailwind-merge/src/lib/tw-join.ts", "../../tailwind-merge/dist/_virtual/_rollupPluginBabelHelpers.mjs", "../../tailwind-merge/src/lib/class-utils.ts", "../../tailwind-merge/src/lib/lru-cache.ts", "../../tailwind-merge/src/lib/modifier-utils.ts", "../../tailwind-merge/src/lib/config-utils.ts", "../../tailwind-merge/src/lib/merge-classlist.ts", "../../tailwind-merge/src/lib/create-tailwind-merge.ts", "../../tailwind-merge/src/lib/from-theme.ts", "../../tailwind-merge/src/lib/validators.ts", "../../tailwind-merge/src/lib/default-config.ts", "../../tailwind-merge/src/lib/tw-merge.ts", "../../tailwind-merge/src/lib/merge-configs.ts", "../../tailwind-merge/src/lib/extend-tailwind-merge.ts", "../../tailwind-merge/src/index.ts"],
  "sourcesContent": ["/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\n\nexport type ClassNameValue = ClassNameArray | string | null | undefined | 0 | false\ntype ClassNameArray = ClassNameValue[]\n\nexport function twJoin(...classLists: ClassNameValue[]): string\nexport function twJoin() {\n    let index = 0\n    let argument: ClassNameValue\n    let resolvedValue: string\n    let string = ''\n\n    while (index < arguments.length) {\n        if ((argument = arguments[index++])) {\n            if ((resolvedValue = toValue(argument))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n    return string\n}\n\nfunction toValue(mix: ClassNameArray | string) {\n    if (typeof mix === 'string') {\n        return mix\n    }\n\n    let resolvedValue: string\n    let string = ''\n\n    for (let k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n            if ((resolvedValue = toValue(mix[k] as ClassNameArray | string))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n\n    return string\n}\n", "function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nexport { _extends as extends };\n//# sourceMappingURL=_rollupPluginBabelHelpers.mjs.map\n", "import { ClassGroup, ClassGroupId, ClassValidator, Config, ThemeGetter, ThemeObject } from './types'\n\nexport interface ClassPartObject {\n    nextPart: Map<string, ClassPartObject>\n    validators: ClassValidatorObject[]\n    classGroupId?: ClassGroupId\n}\n\ninterface ClassValidatorObject {\n    classGroupId: ClassGroupId\n    validator: ClassValidator\n}\n\nconst CLASS_PART_SEPARATOR = '-'\n\nexport function createClassUtils(config: Config) {\n    const classMap = createClassMap(config)\n\n    function getClassGroupId(className: string) {\n        const classParts = className.split(CLASS_PART_SEPARATOR)\n\n        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n        if (classParts[0] === '' && classParts.length !== 1) {\n            classParts.shift()\n        }\n\n        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className)\n    }\n\n    function getConflictingClassGroupIds(classGroupId: ClassGroupId) {\n        return config.conflictingClassGroups[classGroupId] || []\n    }\n\n    return {\n        getClassGroupId,\n        getConflictingClassGroupIds,\n    }\n}\n\nfunction getGroupRecursive(\n    classParts: string[],\n    classPartObject: ClassPartObject,\n): ClassGroupId | undefined {\n    if (classParts.length === 0) {\n        return classPartObject.classGroupId\n    }\n\n    const currentClassPart = classParts[0]!\n    const nextClassPartObject = classPartObject.nextPart.get(currentClassPart)\n    const classGroupFromNextClassPart = nextClassPartObject\n        ? getGroupRecursive(classParts.slice(1), nextClassPartObject)\n        : undefined\n\n    if (classGroupFromNextClassPart) {\n        return classGroupFromNextClassPart\n    }\n\n    if (classPartObject.validators.length === 0) {\n        return undefined\n    }\n\n    const classRest = classParts.join(CLASS_PART_SEPARATOR)\n\n    return classPartObject.validators.find(({ validator }) => validator(classRest))?.classGroupId\n}\n\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/\n\nfunction getGroupIdForArbitraryProperty(className: string) {\n    if (arbitraryPropertyRegex.test(className)) {\n        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)![1]\n        const property = arbitraryPropertyClassName?.substring(\n            0,\n            arbitraryPropertyClassName.indexOf(':'),\n        )\n\n        if (property) {\n            // I use two dots here because one dot is used as prefix for class groups in plugins\n            return 'arbitrary..' + property\n        }\n    }\n}\n\n/**\n * Exported for testing only\n */\nexport function createClassMap(config: Config) {\n    const { theme, prefix } = config\n    const classMap: ClassPartObject = {\n        nextPart: new Map<string, ClassPartObject>(),\n        validators: [],\n    }\n\n    const prefixedClassGroupEntries = getPrefixedClassGroupEntries(\n        Object.entries(config.classGroups),\n        prefix,\n    )\n\n    prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n        processClassesRecursively(classGroup, classMap, classGroupId, theme)\n    })\n\n    return classMap\n}\n\nfunction processClassesRecursively(\n    classGroup: ClassGroup,\n    classPartObject: ClassPartObject,\n    classGroupId: ClassGroupId,\n    theme: ThemeObject,\n) {\n    classGroup.forEach((classDefinition) => {\n        if (typeof classDefinition === 'string') {\n            const classPartObjectToEdit =\n                classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition)\n            classPartObjectToEdit.classGroupId = classGroupId\n            return\n        }\n\n        if (typeof classDefinition === 'function') {\n            if (isThemeGetter(classDefinition)) {\n                processClassesRecursively(\n                    classDefinition(theme),\n                    classPartObject,\n                    classGroupId,\n                    theme,\n                )\n                return\n            }\n\n            classPartObject.validators.push({\n                validator: classDefinition,\n                classGroupId,\n            })\n\n            return\n        }\n\n        Object.entries(classDefinition).forEach(([key, classGroup]) => {\n            processClassesRecursively(\n                classGroup,\n                getPart(classPartObject, key),\n                classGroupId,\n                theme,\n            )\n        })\n    })\n}\n\nfunction getPart(classPartObject: ClassPartObject, path: string) {\n    let currentClassPartObject = classPartObject\n\n    path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {\n        if (!currentClassPartObject.nextPart.has(pathPart)) {\n            currentClassPartObject.nextPart.set(pathPart, {\n                nextPart: new Map(),\n                validators: [],\n            })\n        }\n\n        currentClassPartObject = currentClassPartObject.nextPart.get(pathPart)!\n    })\n\n    return currentClassPartObject\n}\n\nfunction isThemeGetter(func: ClassValidator | ThemeGetter): func is ThemeGetter {\n    return (func as ThemeGetter).isThemeGetter\n}\n\nfunction getPrefixedClassGroupEntries(\n    classGroupEntries: Array<[classGroupId: string, classGroup: ClassGroup]>,\n    prefix: string | undefined,\n): Array<[classGroupId: string, classGroup: ClassGroup]> {\n    if (!prefix) {\n        return classGroupEntries\n    }\n\n    return classGroupEntries.map(([classGroupId, classGroup]) => {\n        const prefixedClassGroup = classGroup.map((classDefinition) => {\n            if (typeof classDefinition === 'string') {\n                return prefix + classDefinition\n            }\n\n            if (typeof classDefinition === 'object') {\n                return Object.fromEntries(\n                    Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]),\n                )\n            }\n\n            return classDefinition\n        })\n\n        return [classGroupId, prefixedClassGroup]\n    })\n}\n", "// Export is needed because TypeScript complains about an error otherwise:\n// Error: …/tailwind-merge/src/config-utils.ts(8,17): semantic error TS4058: Return type of exported function has or is using name 'LruCache' from external module \"…/tailwind-merge/src/lru-cache\" but cannot be named.\nexport interface LruCache<Key, Value> {\n    get(key: Key): Value | undefined\n    set(key: Key, value: Value): void\n}\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nexport function createLruCache<Key, Value>(maxCacheSize: number): LruCache<Key, Value> {\n    if (maxCacheSize < 1) {\n        return {\n            get: () => undefined,\n            set: () => {},\n        }\n    }\n\n    let cacheSize = 0\n    let cache = new Map<Key, Value>()\n    let previousCache = new Map<Key, Value>()\n\n    function update(key: Key, value: Value) {\n        cache.set(key, value)\n        cacheSize++\n\n        if (cacheSize > maxCacheSize) {\n            cacheSize = 0\n            previousCache = cache\n            cache = new Map()\n        }\n    }\n\n    return {\n        get(key) {\n            let value = cache.get(key)\n\n            if (value !== undefined) {\n                return value\n            }\n            if ((value = previousCache.get(key)) !== undefined) {\n                update(key, value)\n                return value\n            }\n        },\n        set(key, value) {\n            if (cache.has(key)) {\n                cache.set(key, value)\n            } else {\n                update(key, value)\n            }\n        },\n    }\n}\n", "import { Config } from './types'\n\nexport const IMPORTANT_MODIFIER = '!'\n\nexport function createSplitModifiers(config: Config) {\n    const separator = config.separator || ':'\n\n    // splitModifiers inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n    return function splitModifiers(className: string) {\n        let bracketDepth = 0\n        let modifiers = []\n        let modifierStart = 0\n\n        for (let index = 0; index < className.length; index++) {\n            let char = className[index]\n\n            if (bracketDepth === 0 && char === separator[0]) {\n                if (\n                    separator.length === 1 ||\n                    className.slice(index, index + separator.length) === separator\n                ) {\n                    modifiers.push(className.slice(modifierStart, index))\n                    modifierStart = index + separator.length\n                }\n            }\n\n            if (char === '[') {\n                bracketDepth++\n            } else if (char === ']') {\n                bracketDepth--\n            }\n        }\n\n        const baseClassNameWithImportantModifier =\n            modifiers.length === 0 ? className : className.substring(modifierStart)\n        const hasImportantModifier =\n            baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER)\n        const baseClassName = hasImportantModifier\n            ? baseClassNameWithImportantModifier.substring(1)\n            : baseClassNameWithImportantModifier\n\n        return {\n            modifiers,\n            hasImportantModifier,\n            baseClassName,\n        }\n    }\n}\n\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nexport function sortModifiers(modifiers: string[]) {\n    if (modifiers.length <= 1) {\n        return modifiers\n    }\n\n    const sortedModifiers: string[] = []\n    let unsortedModifiers: string[] = []\n\n    modifiers.forEach((modifier) => {\n        const isArbitraryVariant = modifier[0] === '['\n\n        if (isArbitraryVariant) {\n            sortedModifiers.push(...unsortedModifiers.sort(), modifier)\n            unsortedModifiers = []\n        } else {\n            unsortedModifiers.push(modifier)\n        }\n    })\n\n    sortedModifiers.push(...unsortedModifiers.sort())\n\n    return sortedModifiers\n}\n", "import { createClassUtils } from './class-utils'\nimport { createLruCache } from './lru-cache'\nimport { createSplitModifiers } from './modifier-utils'\nimport { Config } from './types'\n\nexport type ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createConfigUtils(config: Config) {\n    return {\n        cache: createLruCache<string, string>(config.cacheSize),\n        splitModifiers: createSplitModifiers(config),\n        ...createClassUtils(config),\n    }\n}\n", "import { ConfigUtils } from './config-utils'\nimport { IMPORTANT_MODIFIER, sortModifiers } from './modifier-utils'\n\nconst SPLIT_CLASSES_REGEX = /\\s+/\n\nexport function mergeClassList(classList: string, configUtils: ConfigUtils) {\n    const { splitModifiers, getClassGroupId, getConflictingClassGroupIds } = configUtils\n\n    /**\n     * Set of classGroupIds in following format:\n     * `{importantModifier}{variantModifiers}{classGroupId}`\n     * @example 'float'\n     * @example 'hover:focus:bg-color'\n     * @example 'md:!pr'\n     */\n    const classGroupsInConflict = new Set<string>()\n\n    return (\n        classList\n            .trim()\n            .split(SPLIT_CLASSES_REGEX)\n            .map((originalClassName) => {\n                const { modifiers, hasImportantModifier, baseClassName } =\n                    splitModifiers(originalClassName)\n\n                const classGroupId = getClassGroupId(baseClassName)\n\n                if (!classGroupId) {\n                    return {\n                        isTailwindClass: false as const,\n                        originalClassName,\n                    }\n                }\n\n                const variantModifier = sortModifiers(modifiers).join(':')\n\n                const modifierId = hasImportantModifier\n                    ? variantModifier + IMPORTANT_MODIFIER\n                    : variantModifier\n\n                return {\n                    isTailwindClass: true as const,\n                    modifierId,\n                    classGroupId,\n                    originalClassName,\n                }\n            })\n            .reverse()\n            // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n            .filter((parsed) => {\n                if (!parsed.isTailwindClass) {\n                    return true\n                }\n\n                const { modifierId, classGroupId } = parsed\n\n                const classId = modifierId + classGroupId\n\n                if (classGroupsInConflict.has(classId)) {\n                    return false\n                }\n\n                classGroupsInConflict.add(classId)\n\n                getConflictingClassGroupIds(classGroupId).forEach((group) =>\n                    classGroupsInConflict.add(modifierId + group),\n                )\n\n                return true\n            })\n            .reverse()\n            .map((parsed) => parsed.originalClassName)\n            .join(' ')\n    )\n}\n", "import { createConfigUtils } from './config-utils'\nimport { mergeClassList } from './merge-classlist'\nimport { ClassNameValue, twJoin } from './tw-join'\nimport { Config } from './types'\n\ntype CreateConfigFirst = () => Config\ntype CreateConfigSubsequent = (config: Config) => Config\ntype TailwindMerge = (...classLists: ClassNameValue[]) => string\ntype ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createTailwindMerge(\n    ...createConfig: [CreateConfigFirst, ...CreateConfigSubsequent[]]\n): TailwindMerge {\n    let configUtils: ConfigUtils\n    let cacheGet: ConfigUtils['cache']['get']\n    let cacheSet: ConfigUtils['cache']['set']\n    let functionToCall = initTailwindMerge\n\n    function initTailwindMerge(classList: string) {\n        const [firstCreateConfig, ...restCreateConfig] = createConfig\n\n        const config = restCreateConfig.reduce(\n            (previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig),\n            firstCreateConfig(),\n        )\n\n        configUtils = createConfigUtils(config)\n        cacheGet = configUtils.cache.get\n        cacheSet = configUtils.cache.set\n        functionToCall = tailwindMerge\n\n        return tailwindMerge(classList)\n    }\n\n    function tailwindMerge(classList: string) {\n        const cachedResult = cacheGet(classList)\n\n        if (cachedResult) {\n            return cachedResult\n        }\n\n        const result = mergeClassList(classList, configUtils)\n        cacheSet(classList, result)\n\n        return result\n    }\n\n    return function callTailwindMerge() {\n        return functionToCall(twJoin.apply(null, arguments as any))\n    }\n}\n", "import { ThemeGetter, ThemeObject } from './types'\n\nexport function fromTheme(key: string): ThemeGetter {\n    const themeGetter = (theme: ThemeObject) => theme[key] || []\n\n    themeGetter.isThemeGetter = true as const\n\n    return themeGetter\n}\n", "const arbitraryValueRegex = /^\\[(.+)\\]$/\nconst fractionRegex = /^\\d+\\/\\d+$/\nconst stringLengths = new Set(['px', 'full', 'screen'])\nconst tshirtUnitRegex = /^(\\d+)?(xs|sm|md|lg|xl)$/\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh)/\n// Shadow always begins with x and y offset separated by underscore\nconst shadowRegex = /^-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/\n\nexport function isLength(classPart: string) {\n    return (\n        !Number.isNaN(Number(classPart)) ||\n        stringLengths.has(classPart) ||\n        fractionRegex.test(classPart) ||\n        isArbitraryLength(classPart)\n    )\n}\n\nexport function isArbitraryLength(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    if (arbitraryValue) {\n        return arbitraryValue.startsWith('length:') || lengthUnitRegex.test(arbitraryValue)\n    }\n\n    return false\n}\n\nexport function isArbitrarySize(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue ? arbitraryValue.startsWith('size:') : false\n}\n\nexport function isArbitraryPosition(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue ? arbitraryValue.startsWith('position:') : false\n}\n\nexport function isArbitraryUrl(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue\n        ? arbitraryValue.startsWith('url(') || arbitraryValue.startsWith('url:')\n        : false\n}\n\nexport function isArbitraryNumber(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue\n        ? !Number.isNaN(Number(arbitraryValue)) || arbitraryValue.startsWith('number:')\n        : false\n}\n\n/**\n * @deprecated Will be removed in next major version. Use `isArbitraryNumber` instead.\n */\nexport const isArbitraryWeight = isArbitraryNumber\n\nexport function isInteger(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    if (arbitraryValue) {\n        return Number.isInteger(Number(arbitraryValue))\n    }\n\n    return Number.isInteger(Number(classPart))\n}\n\nexport function isArbitraryValue(classPart: string) {\n    return arbitraryValueRegex.test(classPart)\n}\n\nexport function isAny() {\n    return true\n}\n\nexport function isTshirtSize(classPart: string) {\n    return tshirtUnitRegex.test(classPart)\n}\n\nexport function isArbitraryShadow(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    if (arbitraryValue) {\n        return shadowRegex.test(arbitraryValue)\n    }\n\n    return false\n}\n", "import { fromTheme } from './from-theme'\nimport {\n    isAny,\n    isArbitraryLength,\n    isArbitraryNumber,\n    isArbitraryPosition,\n    isArbitraryShadow,\n    isArbitrarySize,\n    isArbitraryUrl,\n    isArbitraryValue,\n    isInteger,\n    isLength,\n    isTshirtSize,\n} from './validators'\n\nexport function getDefaultConfig() {\n    const colors = fromTheme('colors')\n    const spacing = fromTheme('spacing')\n    const blur = fromTheme('blur')\n    const brightness = fromTheme('brightness')\n    const borderColor = fromTheme('borderColor')\n    const borderRadius = fromTheme('borderRadius')\n    const borderSpacing = fromTheme('borderSpacing')\n    const borderWidth = fromTheme('borderWidth')\n    const contrast = fromTheme('contrast')\n    const grayscale = fromTheme('grayscale')\n    const hueRotate = fromTheme('hueRotate')\n    const invert = fromTheme('invert')\n    const gap = fromTheme('gap')\n    const gradientColorStops = fromTheme('gradientColorStops')\n    const inset = fromTheme('inset')\n    const margin = fromTheme('margin')\n    const opacity = fromTheme('opacity')\n    const padding = fromTheme('padding')\n    const saturate = fromTheme('saturate')\n    const scale = fromTheme('scale')\n    const sepia = fromTheme('sepia')\n    const skew = fromTheme('skew')\n    const space = fromTheme('space')\n    const translate = fromTheme('translate')\n\n    const getOverscroll = () => ['auto', 'contain', 'none'] as const\n    const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'] as const\n    const getSpacingWithAuto = () => ['auto', spacing] as const\n    const getLengthWithEmpty = () => ['', isLength] as const\n    const getIntegerWithAuto = () => ['auto', isInteger] as const\n    const getPositions = () =>\n        [\n            'bottom',\n            'center',\n            'left',\n            'left-bottom',\n            'left-top',\n            'right',\n            'right-bottom',\n            'right-top',\n            'top',\n        ] as const\n    const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'] as const\n    const getBlendModes = () =>\n        [\n            'normal',\n            'multiply',\n            'screen',\n            'overlay',\n            'darken',\n            'lighten',\n            'color-dodge',\n            'color-burn',\n            'hard-light',\n            'soft-light',\n            'difference',\n            'exclusion',\n            'hue',\n            'saturation',\n            'color',\n            'luminosity',\n            'plus-lighter',\n        ] as const\n    const getAlign = () => ['start', 'end', 'center', 'between', 'around', 'evenly'] as const\n    const getZeroAndEmpty = () => ['', '0', isArbitraryValue] as const\n    const getBreaks = () =>\n        ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'] as const\n\n    return {\n        cacheSize: 500,\n        theme: {\n            colors: [isAny],\n            spacing: [isLength],\n            blur: ['none', '', isTshirtSize, isArbitraryLength],\n            brightness: [isInteger],\n            borderColor: [colors],\n            borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryLength],\n            borderSpacing: [spacing],\n            borderWidth: getLengthWithEmpty(),\n            contrast: [isInteger],\n            grayscale: getZeroAndEmpty(),\n            hueRotate: [isInteger],\n            invert: getZeroAndEmpty(),\n            gap: [spacing],\n            gradientColorStops: [colors],\n            inset: getSpacingWithAuto(),\n            margin: getSpacingWithAuto(),\n            opacity: [isInteger],\n            padding: [spacing],\n            saturate: [isInteger],\n            scale: [isInteger],\n            sepia: getZeroAndEmpty(),\n            skew: [isInteger, isArbitraryValue],\n            space: [spacing],\n            translate: [spacing],\n        },\n        classGroups: {\n            // Layout\n            /**\n             * Aspect Ratio\n             * @see https://tailwindcss.com/docs/aspect-ratio\n             */\n            aspect: [{ aspect: ['auto', 'square', 'video', isArbitraryValue] }],\n            /**\n             * Container\n             * @see https://tailwindcss.com/docs/container\n             */\n            container: ['container'],\n            /**\n             * Columns\n             * @see https://tailwindcss.com/docs/columns\n             */\n            columns: [{ columns: [isTshirtSize] }],\n            /**\n             * Break After\n             * @see https://tailwindcss.com/docs/break-after\n             */\n            'break-after': [{ 'break-after': getBreaks() }],\n            /**\n             * Break Before\n             * @see https://tailwindcss.com/docs/break-before\n             */\n            'break-before': [{ 'break-before': getBreaks() }],\n            /**\n             * Break Inside\n             * @see https://tailwindcss.com/docs/break-inside\n             */\n            'break-inside': [{ 'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column'] }],\n            /**\n             * Box Decoration Break\n             * @see https://tailwindcss.com/docs/box-decoration-break\n             */\n            'box-decoration': [{ 'box-decoration': ['slice', 'clone'] }],\n            /**\n             * Box Sizing\n             * @see https://tailwindcss.com/docs/box-sizing\n             */\n            box: [{ box: ['border', 'content'] }],\n            /**\n             * Display\n             * @see https://tailwindcss.com/docs/display\n             */\n            display: [\n                'block',\n                'inline-block',\n                'inline',\n                'flex',\n                'inline-flex',\n                'table',\n                'inline-table',\n                'table-caption',\n                'table-cell',\n                'table-column',\n                'table-column-group',\n                'table-footer-group',\n                'table-header-group',\n                'table-row-group',\n                'table-row',\n                'flow-root',\n                'grid',\n                'inline-grid',\n                'contents',\n                'list-item',\n                'hidden',\n            ],\n            /**\n             * Floats\n             * @see https://tailwindcss.com/docs/float\n             */\n            float: [{ float: ['right', 'left', 'none'] }],\n            /**\n             * Clear\n             * @see https://tailwindcss.com/docs/clear\n             */\n            clear: [{ clear: ['left', 'right', 'both', 'none'] }],\n            /**\n             * Isolation\n             * @see https://tailwindcss.com/docs/isolation\n             */\n            isolation: ['isolate', 'isolation-auto'],\n            /**\n             * Object Fit\n             * @see https://tailwindcss.com/docs/object-fit\n             */\n            'object-fit': [{ object: ['contain', 'cover', 'fill', 'none', 'scale-down'] }],\n            /**\n             * Object Position\n             * @see https://tailwindcss.com/docs/object-position\n             */\n            'object-position': [{ object: [...getPositions(), isArbitraryValue] }],\n            /**\n             * Overflow\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            overflow: [{ overflow: getOverflow() }],\n            /**\n             * Overflow X\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-x': [{ 'overflow-x': getOverflow() }],\n            /**\n             * Overflow Y\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-y': [{ 'overflow-y': getOverflow() }],\n            /**\n             * Overscroll Behavior\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            overscroll: [{ overscroll: getOverscroll() }],\n            /**\n             * Overscroll Behavior X\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-x': [{ 'overscroll-x': getOverscroll() }],\n            /**\n             * Overscroll Behavior Y\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-y': [{ 'overscroll-y': getOverscroll() }],\n            /**\n             * Position\n             * @see https://tailwindcss.com/docs/position\n             */\n            position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n            /**\n             * Top / Right / Bottom / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            inset: [{ inset: [inset] }],\n            /**\n             * Right / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-x': [{ 'inset-x': [inset] }],\n            /**\n             * Top / Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-y': [{ 'inset-y': [inset] }],\n            /**\n             * Top\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            top: [{ top: [inset] }],\n            /**\n             * Right\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            right: [{ right: [inset] }],\n            /**\n             * Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            bottom: [{ bottom: [inset] }],\n            /**\n             * Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            left: [{ left: [inset] }],\n            /**\n             * Visibility\n             * @see https://tailwindcss.com/docs/visibility\n             */\n            visibility: ['visible', 'invisible', 'collapse'],\n            /**\n             * Z-Index\n             * @see https://tailwindcss.com/docs/z-index\n             */\n            z: [{ z: [isInteger] }],\n            // Flexbox and Grid\n            /**\n             * Flex Basis\n             * @see https://tailwindcss.com/docs/flex-basis\n             */\n            basis: [{ basis: [spacing] }],\n            /**\n             * Flex Direction\n             * @see https://tailwindcss.com/docs/flex-direction\n             */\n            'flex-direction': [{ flex: ['row', 'row-reverse', 'col', 'col-reverse'] }],\n            /**\n             * Flex Wrap\n             * @see https://tailwindcss.com/docs/flex-wrap\n             */\n            'flex-wrap': [{ flex: ['wrap', 'wrap-reverse', 'nowrap'] }],\n            /**\n             * Flex\n             * @see https://tailwindcss.com/docs/flex\n             */\n            flex: [{ flex: ['1', 'auto', 'initial', 'none', isArbitraryValue] }],\n            /**\n             * Flex Grow\n             * @see https://tailwindcss.com/docs/flex-grow\n             */\n            grow: [{ grow: getZeroAndEmpty() }],\n            /**\n             * Flex Shrink\n             * @see https://tailwindcss.com/docs/flex-shrink\n             */\n            shrink: [{ shrink: getZeroAndEmpty() }],\n            /**\n             * Order\n             * @see https://tailwindcss.com/docs/order\n             */\n            order: [{ order: ['first', 'last', 'none', isInteger] }],\n            /**\n             * Grid Template Columns\n             * @see https://tailwindcss.com/docs/grid-template-columns\n             */\n            'grid-cols': [{ 'grid-cols': [isAny] }],\n            /**\n             * Grid Column Start / End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start-end': [{ col: ['auto', { span: [isInteger] }] }],\n            /**\n             * Grid Column Start\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start': [{ 'col-start': getIntegerWithAuto() }],\n            /**\n             * Grid Column End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-end': [{ 'col-end': getIntegerWithAuto() }],\n            /**\n             * Grid Template Rows\n             * @see https://tailwindcss.com/docs/grid-template-rows\n             */\n            'grid-rows': [{ 'grid-rows': [isAny] }],\n            /**\n             * Grid Row Start / End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start-end': [{ row: ['auto', { span: [isInteger] }] }],\n            /**\n             * Grid Row Start\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start': [{ 'row-start': getIntegerWithAuto() }],\n            /**\n             * Grid Row End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-end': [{ 'row-end': getIntegerWithAuto() }],\n            /**\n             * Grid Auto Flow\n             * @see https://tailwindcss.com/docs/grid-auto-flow\n             */\n            'grid-flow': [{ 'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense'] }],\n            /**\n             * Grid Auto Columns\n             * @see https://tailwindcss.com/docs/grid-auto-columns\n             */\n            'auto-cols': [{ 'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Grid Auto Rows\n             * @see https://tailwindcss.com/docs/grid-auto-rows\n             */\n            'auto-rows': [{ 'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Gap\n             * @see https://tailwindcss.com/docs/gap\n             */\n            gap: [{ gap: [gap] }],\n            /**\n             * Gap X\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-x': [{ 'gap-x': [gap] }],\n            /**\n             * Gap Y\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-y': [{ 'gap-y': [gap] }],\n            /**\n             * Justify Content\n             * @see https://tailwindcss.com/docs/justify-content\n             */\n            'justify-content': [{ justify: getAlign() }],\n            /**\n             * Justify Items\n             * @see https://tailwindcss.com/docs/justify-items\n             */\n            'justify-items': [{ 'justify-items': ['start', 'end', 'center', 'stretch'] }],\n            /**\n             * Justify Self\n             * @see https://tailwindcss.com/docs/justify-self\n             */\n            'justify-self': [{ 'justify-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            /**\n             * Align Content\n             * @see https://tailwindcss.com/docs/align-content\n             */\n            'align-content': [{ content: [...getAlign(), 'baseline'] }],\n            /**\n             * Align Items\n             * @see https://tailwindcss.com/docs/align-items\n             */\n            'align-items': [{ items: ['start', 'end', 'center', 'baseline', 'stretch'] }],\n            /**\n             * Align Self\n             * @see https://tailwindcss.com/docs/align-self\n             */\n            'align-self': [{ self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline'] }],\n            /**\n             * Place Content\n             * @see https://tailwindcss.com/docs/place-content\n             */\n            'place-content': [{ 'place-content': [...getAlign(), 'baseline', 'stretch'] }],\n            /**\n             * Place Items\n             * @see https://tailwindcss.com/docs/place-items\n             */\n            'place-items': [{ 'place-items': ['start', 'end', 'center', 'baseline', 'stretch'] }],\n            /**\n             * Place Self\n             * @see https://tailwindcss.com/docs/place-self\n             */\n            'place-self': [{ 'place-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            // Spacing\n            /**\n             * Padding\n             * @see https://tailwindcss.com/docs/padding\n             */\n            p: [{ p: [padding] }],\n            /**\n             * Padding X\n             * @see https://tailwindcss.com/docs/padding\n             */\n            px: [{ px: [padding] }],\n            /**\n             * Padding Y\n             * @see https://tailwindcss.com/docs/padding\n             */\n            py: [{ py: [padding] }],\n            /**\n             * Padding Top\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pt: [{ pt: [padding] }],\n            /**\n             * Padding Right\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pr: [{ pr: [padding] }],\n            /**\n             * Padding Bottom\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pb: [{ pb: [padding] }],\n            /**\n             * Padding Left\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pl: [{ pl: [padding] }],\n            /**\n             * Margin\n             * @see https://tailwindcss.com/docs/margin\n             */\n            m: [{ m: [margin] }],\n            /**\n             * Margin X\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mx: [{ mx: [margin] }],\n            /**\n             * Margin Y\n             * @see https://tailwindcss.com/docs/margin\n             */\n            my: [{ my: [margin] }],\n            /**\n             * Margin Top\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mt: [{ mt: [margin] }],\n            /**\n             * Margin Right\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mr: [{ mr: [margin] }],\n            /**\n             * Margin Bottom\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mb: [{ mb: [margin] }],\n            /**\n             * Margin Left\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ml: [{ ml: [margin] }],\n            /**\n             * Space Between X\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x': [{ 'space-x': [space] }],\n            /**\n             * Space Between X Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x-reverse': ['space-x-reverse'],\n            /**\n             * Space Between Y\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y': [{ 'space-y': [space] }],\n            /**\n             * Space Between Y Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y-reverse': ['space-y-reverse'],\n            // Sizing\n            /**\n             * Width\n             * @see https://tailwindcss.com/docs/width\n             */\n            w: [{ w: ['auto', 'min', 'max', 'fit', spacing] }],\n            /**\n             * Min-Width\n             * @see https://tailwindcss.com/docs/min-width\n             */\n            'min-w': [{ 'min-w': ['min', 'max', 'fit', isLength] }],\n            /**\n             * Max-Width\n             * @see https://tailwindcss.com/docs/max-width\n             */\n            'max-w': [\n                {\n                    'max-w': [\n                        '0',\n                        'none',\n                        'full',\n                        'min',\n                        'max',\n                        'fit',\n                        'prose',\n                        { screen: [isTshirtSize] },\n                        isTshirtSize,\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Height\n             * @see https://tailwindcss.com/docs/height\n             */\n            h: [{ h: [spacing, 'auto', 'min', 'max', 'fit'] }],\n            /**\n             * Min-Height\n             * @see https://tailwindcss.com/docs/min-height\n             */\n            'min-h': [{ 'min-h': ['min', 'max', 'fit', isLength] }],\n            /**\n             * Max-Height\n             * @see https://tailwindcss.com/docs/max-height\n             */\n            'max-h': [{ 'max-h': [spacing, 'min', 'max', 'fit'] }],\n            // Typography\n            /**\n             * Font Size\n             * @see https://tailwindcss.com/docs/font-size\n             */\n            'font-size': [{ text: ['base', isTshirtSize, isArbitraryLength] }],\n            /**\n             * Font Smoothing\n             * @see https://tailwindcss.com/docs/font-smoothing\n             */\n            'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n            /**\n             * Font Style\n             * @see https://tailwindcss.com/docs/font-style\n             */\n            'font-style': ['italic', 'not-italic'],\n            /**\n             * Font Weight\n             * @see https://tailwindcss.com/docs/font-weight\n             */\n            'font-weight': [\n                {\n                    font: [\n                        'thin',\n                        'extralight',\n                        'light',\n                        'normal',\n                        'medium',\n                        'semibold',\n                        'bold',\n                        'extrabold',\n                        'black',\n                        isArbitraryNumber,\n                    ],\n                },\n            ],\n            /**\n             * Font Family\n             * @see https://tailwindcss.com/docs/font-family\n             */\n            'font-family': [{ font: [isAny] }],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-normal': ['normal-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-ordinal': ['ordinal'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-slashed-zero': ['slashed-zero'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n            /**\n             * Letter Spacing\n             * @see https://tailwindcss.com/docs/letter-spacing\n             */\n            tracking: [\n                {\n                    tracking: [\n                        'tighter',\n                        'tight',\n                        'normal',\n                        'wide',\n                        'wider',\n                        'widest',\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Line Height\n             * @see https://tailwindcss.com/docs/line-height\n             */\n            leading: [\n                { leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength] },\n            ],\n            /**\n             * List Style Type\n             * @see https://tailwindcss.com/docs/list-style-type\n             */\n            'list-style-type': [{ list: ['none', 'disc', 'decimal', isArbitraryValue] }],\n            /**\n             * List Style Position\n             * @see https://tailwindcss.com/docs/list-style-position\n             */\n            'list-style-position': [{ list: ['inside', 'outside'] }],\n            /**\n             * Placeholder Color\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/placeholder-color\n             */\n            'placeholder-color': [{ placeholder: [colors] }],\n            /**\n             * Placeholder Opacity\n             * @see https://tailwindcss.com/docs/placeholder-opacity\n             */\n            'placeholder-opacity': [{ 'placeholder-opacity': [opacity] }],\n            /**\n             * Text Alignment\n             * @see https://tailwindcss.com/docs/text-align\n             */\n            'text-alignment': [{ text: ['left', 'center', 'right', 'justify', 'start', 'end'] }],\n            /**\n             * Text Color\n             * @see https://tailwindcss.com/docs/text-color\n             */\n            'text-color': [{ text: [colors] }],\n            /**\n             * Text Opacity\n             * @see https://tailwindcss.com/docs/text-opacity\n             */\n            'text-opacity': [{ 'text-opacity': [opacity] }],\n            /**\n             * Text Decoration\n             * @see https://tailwindcss.com/docs/text-decoration\n             */\n            'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n            /**\n             * Text Decoration Style\n             * @see https://tailwindcss.com/docs/text-decoration-style\n             */\n            'text-decoration-style': [{ decoration: [...getLineStyles(), 'wavy'] }],\n            /**\n             * Text Decoration Thickness\n             * @see https://tailwindcss.com/docs/text-decoration-thickness\n             */\n            'text-decoration-thickness': [{ decoration: ['auto', 'from-font', isLength] }],\n            /**\n             * Text Underline Offset\n             * @see https://tailwindcss.com/docs/text-underline-offset\n             */\n            'underline-offset': [{ 'underline-offset': ['auto', isLength] }],\n            /**\n             * Text Decoration Color\n             * @see https://tailwindcss.com/docs/text-decoration-color\n             */\n            'text-decoration-color': [{ decoration: [colors] }],\n            /**\n             * Text Transform\n             * @see https://tailwindcss.com/docs/text-transform\n             */\n            'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n            /**\n             * Text Overflow\n             * @see https://tailwindcss.com/docs/text-overflow\n             */\n            'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n            /**\n             * Text Indent\n             * @see https://tailwindcss.com/docs/text-indent\n             */\n            indent: [{ indent: [spacing] }],\n            /**\n             * Vertical Alignment\n             * @see https://tailwindcss.com/docs/vertical-align\n             */\n            'vertical-align': [\n                {\n                    align: [\n                        'baseline',\n                        'top',\n                        'middle',\n                        'bottom',\n                        'text-top',\n                        'text-bottom',\n                        'sub',\n                        'super',\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Whitespace\n             * @see https://tailwindcss.com/docs/whitespace\n             */\n            whitespace: [{ whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap'] }],\n            /**\n             * Word Break\n             * @see https://tailwindcss.com/docs/word-break\n             */\n            break: [{ break: ['normal', 'words', 'all', 'keep'] }],\n            /**\n             * Content\n             * @see https://tailwindcss.com/docs/content\n             */\n            content: [{ content: ['none', isArbitraryValue] }],\n            // Backgrounds\n            /**\n             * Background Attachment\n             * @see https://tailwindcss.com/docs/background-attachment\n             */\n            'bg-attachment': [{ bg: ['fixed', 'local', 'scroll'] }],\n            /**\n             * Background Clip\n             * @see https://tailwindcss.com/docs/background-clip\n             */\n            'bg-clip': [{ 'bg-clip': ['border', 'padding', 'content', 'text'] }],\n            /**\n             * Background Opacity\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/background-opacity\n             */\n            'bg-opacity': [{ 'bg-opacity': [opacity] }],\n            /**\n             * Background Origin\n             * @see https://tailwindcss.com/docs/background-origin\n             */\n            'bg-origin': [{ 'bg-origin': ['border', 'padding', 'content'] }],\n            /**\n             * Background Position\n             * @see https://tailwindcss.com/docs/background-position\n             */\n            'bg-position': [{ bg: [...getPositions(), isArbitraryPosition] }],\n            /**\n             * Background Repeat\n             * @see https://tailwindcss.com/docs/background-repeat\n             */\n            'bg-repeat': [{ bg: ['no-repeat', { repeat: ['', 'x', 'y', 'round', 'space'] }] }],\n            /**\n             * Background Size\n             * @see https://tailwindcss.com/docs/background-size\n             */\n            'bg-size': [{ bg: ['auto', 'cover', 'contain', isArbitrarySize] }],\n            /**\n             * Background Image\n             * @see https://tailwindcss.com/docs/background-image\n             */\n            'bg-image': [\n                {\n                    bg: [\n                        'none',\n                        { 'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'] },\n                        isArbitraryUrl,\n                    ],\n                },\n            ],\n            /**\n             * Background Color\n             * @see https://tailwindcss.com/docs/background-color\n             */\n            'bg-color': [{ bg: [colors] }],\n            /**\n             * Gradient Color Stops From\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from': [{ from: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops Via\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via': [{ via: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops To\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to': [{ to: [gradientColorStops] }],\n            // Borders\n            /**\n             * Border Radius\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            rounded: [{ rounded: [borderRadius] }],\n            /**\n             * Border Radius Top\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-t': [{ 'rounded-t': [borderRadius] }],\n            /**\n             * Border Radius Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-r': [{ 'rounded-r': [borderRadius] }],\n            /**\n             * Border Radius Bottom\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-b': [{ 'rounded-b': [borderRadius] }],\n            /**\n             * Border Radius Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-l': [{ 'rounded-l': [borderRadius] }],\n            /**\n             * Border Radius Top Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tl': [{ 'rounded-tl': [borderRadius] }],\n            /**\n             * Border Radius Top Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tr': [{ 'rounded-tr': [borderRadius] }],\n            /**\n             * Border Radius Bottom Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-br': [{ 'rounded-br': [borderRadius] }],\n            /**\n             * Border Radius Bottom Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-bl': [{ 'rounded-bl': [borderRadius] }],\n            /**\n             * Border Width\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w': [{ border: [borderWidth] }],\n            /**\n             * Border Width X\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-x': [{ 'border-x': [borderWidth] }],\n            /**\n             * Border Width Y\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-y': [{ 'border-y': [borderWidth] }],\n            /**\n             * Border Width Top\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-t': [{ 'border-t': [borderWidth] }],\n            /**\n             * Border Width Right\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-r': [{ 'border-r': [borderWidth] }],\n            /**\n             * Border Width Bottom\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-b': [{ 'border-b': [borderWidth] }],\n            /**\n             * Border Width Left\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-l': [{ 'border-l': [borderWidth] }],\n            /**\n             * Border Opacity\n             * @see https://tailwindcss.com/docs/border-opacity\n             */\n            'border-opacity': [{ 'border-opacity': [opacity] }],\n            /**\n             * Border Style\n             * @see https://tailwindcss.com/docs/border-style\n             */\n            'border-style': [{ border: [...getLineStyles(), 'hidden'] }],\n            /**\n             * Divide Width X\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x': [{ 'divide-x': [borderWidth] }],\n            /**\n             * Divide Width X Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x-reverse': ['divide-x-reverse'],\n            /**\n             * Divide Width Y\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y': [{ 'divide-y': [borderWidth] }],\n            /**\n             * Divide Width Y Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y-reverse': ['divide-y-reverse'],\n            /**\n             * Divide Opacity\n             * @see https://tailwindcss.com/docs/divide-opacity\n             */\n            'divide-opacity': [{ 'divide-opacity': [opacity] }],\n            /**\n             * Divide Style\n             * @see https://tailwindcss.com/docs/divide-style\n             */\n            'divide-style': [{ divide: getLineStyles() }],\n            /**\n             * Border Color\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color': [{ border: [borderColor] }],\n            /**\n             * Border Color X\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-x': [{ 'border-x': [borderColor] }],\n            /**\n             * Border Color Y\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-y': [{ 'border-y': [borderColor] }],\n            /**\n             * Border Color Top\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-t': [{ 'border-t': [borderColor] }],\n            /**\n             * Border Color Right\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-r': [{ 'border-r': [borderColor] }],\n            /**\n             * Border Color Bottom\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-b': [{ 'border-b': [borderColor] }],\n            /**\n             * Border Color Left\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-l': [{ 'border-l': [borderColor] }],\n            /**\n             * Divide Color\n             * @see https://tailwindcss.com/docs/divide-color\n             */\n            'divide-color': [{ divide: [borderColor] }],\n            /**\n             * Outline Style\n             * @see https://tailwindcss.com/docs/outline-style\n             */\n            'outline-style': [{ outline: ['', ...getLineStyles()] }],\n            /**\n             * Outline Offset\n             * @see https://tailwindcss.com/docs/outline-offset\n             */\n            'outline-offset': [{ 'outline-offset': [isLength] }],\n            /**\n             * Outline Width\n             * @see https://tailwindcss.com/docs/outline-width\n             */\n            'outline-w': [{ outline: [isLength] }],\n            /**\n             * Outline Color\n             * @see https://tailwindcss.com/docs/outline-color\n             */\n            'outline-color': [{ outline: [colors] }],\n            /**\n             * Ring Width\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w': [{ ring: getLengthWithEmpty() }],\n            /**\n             * Ring Width Inset\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w-inset': ['ring-inset'],\n            /**\n             * Ring Color\n             * @see https://tailwindcss.com/docs/ring-color\n             */\n            'ring-color': [{ ring: [colors] }],\n            /**\n             * Ring Opacity\n             * @see https://tailwindcss.com/docs/ring-opacity\n             */\n            'ring-opacity': [{ 'ring-opacity': [opacity] }],\n            /**\n             * Ring Offset Width\n             * @see https://tailwindcss.com/docs/ring-offset-width\n             */\n            'ring-offset-w': [{ 'ring-offset': [isLength] }],\n            /**\n             * Ring Offset Color\n             * @see https://tailwindcss.com/docs/ring-offset-color\n             */\n            'ring-offset-color': [{ 'ring-offset': [colors] }],\n            // Effects\n            /**\n             * Box Shadow\n             * @see https://tailwindcss.com/docs/box-shadow\n             */\n            shadow: [{ shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow] }],\n            /**\n             * Box Shadow Color\n             * @see https://tailwindcss.com/docs/box-shadow-color\n             */\n            'shadow-color': [{ shadow: [isAny] }],\n            /**\n             * Opacity\n             * @see https://tailwindcss.com/docs/opacity\n             */\n            opacity: [{ opacity: [opacity] }],\n            /**\n             * Mix Beldn Mode\n             * @see https://tailwindcss.com/docs/mix-blend-mode\n             */\n            'mix-blend': [{ 'mix-blend': getBlendModes() }],\n            /**\n             * Background Blend Mode\n             * @see https://tailwindcss.com/docs/background-blend-mode\n             */\n            'bg-blend': [{ 'bg-blend': getBlendModes() }],\n            // Filters\n            /**\n             * Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/filter\n             */\n            filter: [{ filter: ['', 'none'] }],\n            /**\n             * Blur\n             * @see https://tailwindcss.com/docs/blur\n             */\n            blur: [{ blur: [blur] }],\n            /**\n             * Brightness\n             * @see https://tailwindcss.com/docs/brightness\n             */\n            brightness: [{ brightness: [brightness] }],\n            /**\n             * Contrast\n             * @see https://tailwindcss.com/docs/contrast\n             */\n            contrast: [{ contrast: [contrast] }],\n            /**\n             * Drop Shadow\n             * @see https://tailwindcss.com/docs/drop-shadow\n             */\n            'drop-shadow': [{ 'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue] }],\n            /**\n             * Grayscale\n             * @see https://tailwindcss.com/docs/grayscale\n             */\n            grayscale: [{ grayscale: [grayscale] }],\n            /**\n             * Hue Rotate\n             * @see https://tailwindcss.com/docs/hue-rotate\n             */\n            'hue-rotate': [{ 'hue-rotate': [hueRotate] }],\n            /**\n             * Invert\n             * @see https://tailwindcss.com/docs/invert\n             */\n            invert: [{ invert: [invert] }],\n            /**\n             * Saturate\n             * @see https://tailwindcss.com/docs/saturate\n             */\n            saturate: [{ saturate: [saturate] }],\n            /**\n             * Sepia\n             * @see https://tailwindcss.com/docs/sepia\n             */\n            sepia: [{ sepia: [sepia] }],\n            /**\n             * Backdrop Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/backdrop-filter\n             */\n            'backdrop-filter': [{ 'backdrop-filter': ['', 'none'] }],\n            /**\n             * Backdrop Blur\n             * @see https://tailwindcss.com/docs/backdrop-blur\n             */\n            'backdrop-blur': [{ 'backdrop-blur': [blur] }],\n            /**\n             * Backdrop Brightness\n             * @see https://tailwindcss.com/docs/backdrop-brightness\n             */\n            'backdrop-brightness': [{ 'backdrop-brightness': [brightness] }],\n            /**\n             * Backdrop Contrast\n             * @see https://tailwindcss.com/docs/backdrop-contrast\n             */\n            'backdrop-contrast': [{ 'backdrop-contrast': [contrast] }],\n            /**\n             * Backdrop Grayscale\n             * @see https://tailwindcss.com/docs/backdrop-grayscale\n             */\n            'backdrop-grayscale': [{ 'backdrop-grayscale': [grayscale] }],\n            /**\n             * Backdrop Hue Rotate\n             * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n             */\n            'backdrop-hue-rotate': [{ 'backdrop-hue-rotate': [hueRotate] }],\n            /**\n             * Backdrop Invert\n             * @see https://tailwindcss.com/docs/backdrop-invert\n             */\n            'backdrop-invert': [{ 'backdrop-invert': [invert] }],\n            /**\n             * Backdrop Opacity\n             * @see https://tailwindcss.com/docs/backdrop-opacity\n             */\n            'backdrop-opacity': [{ 'backdrop-opacity': [opacity] }],\n            /**\n             * Backdrop Saturate\n             * @see https://tailwindcss.com/docs/backdrop-saturate\n             */\n            'backdrop-saturate': [{ 'backdrop-saturate': [saturate] }],\n            /**\n             * Backdrop Sepia\n             * @see https://tailwindcss.com/docs/backdrop-sepia\n             */\n            'backdrop-sepia': [{ 'backdrop-sepia': [sepia] }],\n            // Tables\n            /**\n             * Border Collapse\n             * @see https://tailwindcss.com/docs/border-collapse\n             */\n            'border-collapse': [{ border: ['collapse', 'separate'] }],\n            /**\n             * Border Spacing\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing': [{ 'border-spacing': [borderSpacing] }],\n            /**\n             * Border Spacing X\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-x': [{ 'border-spacing-x': [borderSpacing] }],\n            /**\n             * Border Spacing Y\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-y': [{ 'border-spacing-y': [borderSpacing] }],\n            /**\n             * Table Layout\n             * @see https://tailwindcss.com/docs/table-layout\n             */\n            'table-layout': [{ table: ['auto', 'fixed'] }],\n            // Transitions and Animation\n            /**\n             * Tranisition Property\n             * @see https://tailwindcss.com/docs/transition-property\n             */\n            transition: [\n                {\n                    transition: [\n                        'none',\n                        'all',\n                        '',\n                        'colors',\n                        'opacity',\n                        'shadow',\n                        'transform',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Transition Duration\n             * @see https://tailwindcss.com/docs/transition-duration\n             */\n            duration: [{ duration: [isInteger] }],\n            /**\n             * Transition Timing Function\n             * @see https://tailwindcss.com/docs/transition-timing-function\n             */\n            ease: [{ ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue] }],\n            /**\n             * Transition Delay\n             * @see https://tailwindcss.com/docs/transition-delay\n             */\n            delay: [{ delay: [isInteger] }],\n            /**\n             * Animation\n             * @see https://tailwindcss.com/docs/animation\n             */\n            animate: [{ animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue] }],\n            // Transforms\n            /**\n             * Transform\n             * @see https://tailwindcss.com/docs/transform\n             */\n            transform: [{ transform: ['', 'gpu', 'none'] }],\n            /**\n             * Scale\n             * @see https://tailwindcss.com/docs/scale\n             */\n            scale: [{ scale: [scale] }],\n            /**\n             * Scale X\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-x': [{ 'scale-x': [scale] }],\n            /**\n             * Scale Y\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-y': [{ 'scale-y': [scale] }],\n            /**\n             * Rotate\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            rotate: [{ rotate: [isInteger, isArbitraryValue] }],\n            /**\n             * Translate X\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-x': [{ 'translate-x': [translate] }],\n            /**\n             * Translate Y\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-y': [{ 'translate-y': [translate] }],\n            /**\n             * Skew X\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-x': [{ 'skew-x': [skew] }],\n            /**\n             * Skew Y\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-y': [{ 'skew-y': [skew] }],\n            /**\n             * Transform Origin\n             * @see https://tailwindcss.com/docs/transform-origin\n             */\n            'transform-origin': [\n                {\n                    origin: [\n                        'center',\n                        'top',\n                        'top-right',\n                        'right',\n                        'bottom-right',\n                        'bottom',\n                        'bottom-left',\n                        'left',\n                        'top-left',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            // Interactivity\n            /**\n             * Accent Color\n             * @see https://tailwindcss.com/docs/accent-color\n             */\n            accent: [{ accent: ['auto', colors] }],\n            /**\n             * Appearance\n             * @see https://tailwindcss.com/docs/appearance\n             */\n            appearance: ['appearance-none'],\n            /**\n             * Cursor\n             * @see https://tailwindcss.com/docs/cursor\n             */\n            cursor: [\n                {\n                    cursor: [\n                        'auto',\n                        'default',\n                        'pointer',\n                        'wait',\n                        'text',\n                        'move',\n                        'help',\n                        'not-allowed',\n                        'none',\n                        'context-menu',\n                        'progress',\n                        'cell',\n                        'crosshair',\n                        'vertical-text',\n                        'alias',\n                        'copy',\n                        'no-drop',\n                        'grab',\n                        'grabbing',\n                        'all-scroll',\n                        'col-resize',\n                        'row-resize',\n                        'n-resize',\n                        'e-resize',\n                        's-resize',\n                        'w-resize',\n                        'ne-resize',\n                        'nw-resize',\n                        'se-resize',\n                        'sw-resize',\n                        'ew-resize',\n                        'ns-resize',\n                        'nesw-resize',\n                        'nwse-resize',\n                        'zoom-in',\n                        'zoom-out',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Caret Color\n             * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n             */\n            'caret-color': [{ caret: [colors] }],\n            /**\n             * Pointer Events\n             * @see https://tailwindcss.com/docs/pointer-events\n             */\n            'pointer-events': [{ 'pointer-events': ['none', 'auto'] }],\n            /**\n             * Resize\n             * @see https://tailwindcss.com/docs/resize\n             */\n            resize: [{ resize: ['none', 'y', 'x', ''] }],\n            /**\n             * Scroll Behavior\n             * @see https://tailwindcss.com/docs/scroll-behavior\n             */\n            'scroll-behavior': [{ scroll: ['auto', 'smooth'] }],\n            /**\n             * Scroll Margin\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-m': [{ 'scroll-m': [spacing] }],\n            /**\n             * Scroll Margin X\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mx': [{ 'scroll-mx': [spacing] }],\n            /**\n             * Scroll Margin Y\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-my': [{ 'scroll-my': [spacing] }],\n            /**\n             * Scroll Margin Top\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mt': [{ 'scroll-mt': [spacing] }],\n            /**\n             * Scroll Margin Right\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mr': [{ 'scroll-mr': [spacing] }],\n            /**\n             * Scroll Margin Bottom\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mb': [{ 'scroll-mb': [spacing] }],\n            /**\n             * Scroll Margin Left\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ml': [{ 'scroll-ml': [spacing] }],\n            /**\n             * Scroll Padding\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-p': [{ 'scroll-p': [spacing] }],\n            /**\n             * Scroll Padding X\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-px': [{ 'scroll-px': [spacing] }],\n            /**\n             * Scroll Padding Y\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-py': [{ 'scroll-py': [spacing] }],\n            /**\n             * Scroll Padding Top\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pt': [{ 'scroll-pt': [spacing] }],\n            /**\n             * Scroll Padding Right\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pr': [{ 'scroll-pr': [spacing] }],\n            /**\n             * Scroll Padding Bottom\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pb': [{ 'scroll-pb': [spacing] }],\n            /**\n             * Scroll Padding Left\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pl': [{ 'scroll-pl': [spacing] }],\n            /**\n             * Scroll Snap Align\n             * @see https://tailwindcss.com/docs/scroll-snap-align\n             */\n            'snap-align': [{ snap: ['start', 'end', 'center', 'align-none'] }],\n            /**\n             * Scroll Snap Stop\n             * @see https://tailwindcss.com/docs/scroll-snap-stop\n             */\n            'snap-stop': [{ snap: ['normal', 'always'] }],\n            /**\n             * Scroll Snap Type\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-type': [{ snap: ['none', 'x', 'y', 'both'] }],\n            /**\n             * Scroll Snap Type Strictness\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-strictness': [{ snap: ['mandatory', 'proximity'] }],\n            /**\n             * Touch Action\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            touch: [\n                {\n                    touch: [\n                        'auto',\n                        'none',\n                        'pinch-zoom',\n                        'manipulation',\n                        { pan: ['x', 'left', 'right', 'y', 'up', 'down'] },\n                    ],\n                },\n            ],\n            /**\n             * User Select\n             * @see https://tailwindcss.com/docs/user-select\n             */\n            select: [{ select: ['none', 'text', 'all', 'auto'] }],\n            /**\n             * Will Change\n             * @see https://tailwindcss.com/docs/will-change\n             */\n            'will-change': [\n                { 'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue] },\n            ],\n            // SVG\n            /**\n             * Fill\n             * @see https://tailwindcss.com/docs/fill\n             */\n            fill: [{ fill: [colors, 'none'] }],\n            /**\n             * Stroke Width\n             * @see https://tailwindcss.com/docs/stroke-width\n             */\n            'stroke-w': [{ stroke: [isLength, isArbitraryNumber] }],\n            /**\n             * Stroke\n             * @see https://tailwindcss.com/docs/stroke\n             */\n            stroke: [{ stroke: [colors, 'none'] }],\n            // Accessibility\n            /**\n             * Screen Readers\n             * @see https://tailwindcss.com/docs/screen-readers\n             */\n            sr: ['sr-only', 'not-sr-only'],\n        },\n        conflictingClassGroups: {\n            overflow: ['overflow-x', 'overflow-y'],\n            overscroll: ['overscroll-x', 'overscroll-y'],\n            inset: ['inset-x', 'inset-y', 'top', 'right', 'bottom', 'left'],\n            'inset-x': ['right', 'left'],\n            'inset-y': ['top', 'bottom'],\n            flex: ['basis', 'grow', 'shrink'],\n            gap: ['gap-x', 'gap-y'],\n            p: ['px', 'py', 'pt', 'pr', 'pb', 'pl'],\n            px: ['pr', 'pl'],\n            py: ['pt', 'pb'],\n            m: ['mx', 'my', 'mt', 'mr', 'mb', 'ml'],\n            mx: ['mr', 'ml'],\n            my: ['mt', 'mb'],\n            'font-size': ['leading'],\n            'fvn-normal': [\n                'fvn-ordinal',\n                'fvn-slashed-zero',\n                'fvn-figure',\n                'fvn-spacing',\n                'fvn-fraction',\n            ],\n            'fvn-ordinal': ['fvn-normal'],\n            'fvn-slashed-zero': ['fvn-normal'],\n            'fvn-figure': ['fvn-normal'],\n            'fvn-spacing': ['fvn-normal'],\n            'fvn-fraction': ['fvn-normal'],\n            rounded: [\n                'rounded-t',\n                'rounded-r',\n                'rounded-b',\n                'rounded-l',\n                'rounded-tl',\n                'rounded-tr',\n                'rounded-br',\n                'rounded-bl',\n            ],\n            'rounded-t': ['rounded-tl', 'rounded-tr'],\n            'rounded-r': ['rounded-tr', 'rounded-br'],\n            'rounded-b': ['rounded-br', 'rounded-bl'],\n            'rounded-l': ['rounded-tl', 'rounded-bl'],\n            'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n            'border-w': ['border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n            'border-w-x': ['border-w-r', 'border-w-l'],\n            'border-w-y': ['border-w-t', 'border-w-b'],\n            'border-color': [\n                'border-color-t',\n                'border-color-r',\n                'border-color-b',\n                'border-color-l',\n            ],\n            'border-color-x': ['border-color-r', 'border-color-l'],\n            'border-color-y': ['border-color-t', 'border-color-b'],\n            'scroll-m': [\n                'scroll-mx',\n                'scroll-my',\n                'scroll-mt',\n                'scroll-mr',\n                'scroll-mb',\n                'scroll-ml',\n            ],\n            'scroll-mx': ['scroll-mr', 'scroll-ml'],\n            'scroll-my': ['scroll-mt', 'scroll-mb'],\n            'scroll-p': [\n                'scroll-px',\n                'scroll-py',\n                'scroll-pt',\n                'scroll-pr',\n                'scroll-pb',\n                'scroll-pl',\n            ],\n            'scroll-px': ['scroll-pr', 'scroll-pl'],\n            'scroll-py': ['scroll-pt', 'scroll-pb'],\n        },\n    } as const\n}\n", "import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\n\nexport const twMerge = createTailwindMerge(getDefaultConfig)\n", "import { Config } from './types'\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nexport function mergeConfigs(baseConfig: Config, configExtension: Partial<Config>) {\n    for (const key in configExtension) {\n        mergePropertyRecursively(baseConfig as any, key, configExtension[key as keyof Config])\n    }\n\n    return baseConfig\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nconst overrideTypes = new Set(['string', 'number', 'boolean'])\n\nfunction mergePropertyRecursively(\n    baseObject: Record<string, unknown>,\n    mergeKey: string,\n    mergeValue: unknown,\n) {\n    if (\n        !hasOwnProperty.call(baseObject, mergeKey) ||\n        overrideTypes.has(typeof mergeValue) ||\n        mergeValue === null\n    ) {\n        baseObject[mergeKey] = mergeValue\n        return\n    }\n\n    if (Array.isArray(mergeValue) && Array.isArray(baseObject[mergeKey])) {\n        baseObject[mergeKey] = (baseObject[mergeKey] as unknown[]).concat(mergeValue)\n        return\n    }\n\n    if (typeof mergeValue === 'object' && typeof baseObject[mergeKey] === 'object') {\n        if (baseObject[mergeKey] === null) {\n            baseObject[mergeKey] = mergeValue\n            return\n        }\n\n        for (const nextKey in mergeValue) {\n            mergePropertyRecursively(\n                baseObject[mergeKey] as Record<string, unknown>,\n                nextKey,\n                mergeValue[nextKey as keyof object],\n            )\n        }\n    }\n}\n", "import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\nimport { mergeConfigs } from './merge-configs'\nimport { Config } from './types'\n\ntype CreateConfigSubsequent = (config: Config) => Config\n\nexport function extendTailwindMerge(\n    configExtension: Partial<Config> | CreateConfigSubsequent,\n    ...createConfig: CreateConfigSubsequent[]\n) {\n    return typeof configExtension === 'function'\n        ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig)\n        : createTailwindMerge(\n              () => mergeConfigs(getDefaultConfig(), configExtension),\n              ...createConfig,\n          )\n}\n", "import { twJoin } from './lib/tw-join'\n\nexport { twMerge } from './lib/tw-merge'\nexport { twJoin } from './lib/tw-join'\nexport { getDefaultConfig } from './lib/default-config'\nexport { extendTailwindMerge } from './lib/extend-tailwind-merge'\nexport { createTailwindMerge } from './lib/create-tailwind-merge'\nexport type { Config } from './lib/types'\nexport * as validators from './lib/validators'\nexport { mergeConfigs } from './lib/merge-configs'\nexport { fromTheme } from './lib/from-theme'\n\n/**\n * @deprecated Will be removed in next major version. Use `twJoin` instead.\n */\nexport const join = twJoin\n"],
  "mappings": "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",
  "names": ["twJoin", "index", "argument", "resolvedValue", "string", "arguments", "length", "toValue", "mix", "k", "CLASS_PART_SEPARATOR", "createClassUtils", "config", "classMap", "createClassMap", "getClassGroupId", "className", "classParts", "split", "length", "shift", "getGroupRecursive", "getGroupIdForArbitraryProperty", "getConflictingClassGroupIds", "classGroupId", "conflictingClassGroups", "classPartObject", "currentClassPart", "nextClassPartObject", "nextPart", "get", "classGroupFromNextClassPart", "slice", "undefined", "validators", "classRest", "join", "find", "validator", "arbitraryPropertyRegex", "test", "arbitraryPropertyClassName", "exec", "property", "substring", "indexOf", "theme", "prefix", "Map", "prefixedClassGroupEntries", "getPrefixedClassGroupEntries", "Object", "entries", "classGroups", "forEach", "classGroup", "processClassesRecursively", "classDefinition", "classPartObjectToEdit", "getPart", "isThemeGetter", "push", "key", "path", "currentClassPartObject", "pathPart", "has", "set", "func", "classGroupEntries", "map", "prefixedClassGroup", "fromEntries", "value", "createLruCache", "maxCacheSize", "get", "undefined", "set", "cacheSize", "cache", "Map", "previousCache", "update", "key", "value", "has", "IMPORTANT_MODIFIER", "createSplitModifiers", "config", "separator", "splitModifiers", "className", "bracketDepth", "modifiers", "modifierStart", "index", "length", "char", "slice", "push", "baseClassNameWithImportantModifier", "substring", "hasImportantModifier", "startsWith", "baseClassName", "sortModifiers", "sortedModifiers", "unsortedModifiers", "forEach", "modifier", "isArbitraryVariant", "sort", "createConfigUtils", "config", "cache", "createLruCache", "cacheSize", "splitModifiers", "createSplitModifiers", "createClassUtils", "SPLIT_CLASSES_REGEX", "mergeClassList", "classList", "configUtils", "splitModifiers", "getClassGroupId", "getConflictingClassGroupIds", "classGroupsInConflict", "Set", "trim", "split", "map", "originalClassName", "modifiers", "hasImportantModifier", "baseClassName", "classGroupId", "isTailwindClass", "variantModifier", "sortModifiers", "join", "modifierId", "IMPORTANT_MODIFIER", "reverse", "filter", "parsed", "classId", "has", "add", "forEach", "group", "createTailwindMerge", "createConfig", "configUtils", "cacheGet", "cacheSet", "functionToCall", "initTailwindMerge", "classList", "firstCreateConfig", "restCreateConfig", "config", "reduce", "previousConfig", "createConfigCurrent", "createConfigUtils", "cache", "get", "set", "tailwindMerge", "cachedResult", "result", "mergeClassList", "callTailwindMerge", "twJoin", "apply", "arguments", "fromTheme", "key", "themeGetter", "theme", "isThemeGetter", "arbitraryValueRegex", "fractionRegex", "stringLengths", "Set", "tshirtUnitRegex", "lengthUnitRegex", "shadowRegex", "isLength", "classPart", "Number", "isNaN", "has", "test", "isArbitraryLength", "arbitraryValue", "exec", "startsWith", "isArbitrarySize", "isArbitraryPosition", "isArbitraryUrl", "isArbitraryNumber", "isArbitraryWeight", "isInteger", "isArbitraryValue", "isAny", "isTshirtSize", "isArbitraryShadow", "getDefaultConfig", "colors", "fromTheme", "spacing", "blur", "brightness", "borderColor", "borderRadius", "borderSpacing", "borderWidth", "contrast", "grayscale", "hueRotate", "invert", "gap", "gradientColorStops", "inset", "margin", "opacity", "padding", "saturate", "scale", "sepia", "skew", "space", "translate", "getOverscroll", "getOverflow", "getSpacingWithAuto", "getLengthWithEmpty", "isLength", "getIntegerWithAuto", "isInteger", "getPositions", "getLineStyles", "getBlendModes", "getAlign", "getZeroAndEmpty", "isArbitraryValue", "getBreaks", "cacheSize", "theme", "isAny", "isTshirtSize", "isArbitraryLength", "classGroups", "aspect", "container", "columns", "box", "display", "clear", "isolation", "object", "overflow", "overscroll", "position", "top", "right", "bottom", "left", "visibility", "z", "basis", "flex", "grow", "shrink", "order", "col", "span", "row", "justify", "content", "items", "self", "p", "px", "py", "pt", "pr", "pb", "pl", "m", "mx", "my", "mt", "mr", "mb", "ml", "w", "screen", "h", "text", "font", "isArbitraryNumber", "tracking", "leading", "list", "placeholder", "decoration", "indent", "align", "whitespace", "bg", "isArbitraryPosition", "repeat", "isArbitrarySize", "isArbitraryUrl", "from", "via", "to", "rounded", "border", "divide", "outline", "ring", "shadow", "isArbitraryShadow", "filter", "table", "transition", "duration", "ease", "delay", "animate", "transform", "rotate", "origin", "accent", "appearance", "cursor", "caret", "resize", "scroll", "snap", "touch", "pan", "select", "fill", "stroke", "sr", "conflictingClassGroups", "twMerge", "createTailwindMerge", "getDefaultConfig", "mergeConfigs", "baseConfig", "configExtension", "key", "mergePropertyRecursively", "hasOwnProperty", "Object", "prototype", "overrideTypes", "Set", "baseObject", "mergeKey", "mergeValue", "call", "has", "Array", "isArray", "concat", "nextKey", "extendTailwindMerge", "configExtension", "createConfig", "createTailwindMerge", "getDefaultConfig", "mergeConfigs", "join", "twJoin"]
}
